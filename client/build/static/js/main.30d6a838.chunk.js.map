{"version":3,"sources":["components/searchtextprovider.js","components/navigation.jsx","components/home.js","components/member.jsx","components/street.jsx","components/memberedit.jsx","utils/memberutils.js","components/members.jsx","components/printout.js","components/login.js","components/exportcsv.js","App.js","reportWebVitals.js","index.js"],"names":["SearchTextContext","React","createContext","SearchTextProvider","state","searchText","Provider","value","this","setSearchText","console","log","setState","props","children","Component","Navigation","loginStr","localStorage","user_email","Navbar","bg","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","to","Link","Consumer","context","Form","inline","FormControl","type","placeholder","onChange","e","target","onKeyPress","charCode","preventDefault","Button","variant","onClick","Home","stats","error","axios","get","res","members","data","message","displayName","user_displayName","Jumbotron","fluid","Container","Member","handleEditButtonClick","handleMemberEdit","member","handleRemoveButtonClick","handleMemberRemove","address","HouseNo","Street","name","Firstname","Lastname","MemberId","ButtonGroup","size","handleAddButtonClick","addMember","street","m","updateMember","removeMember","Fragment","colSpan","map","MemberEdit","handleSave","onSave","handleCancel","onCancel","Modal","aria-labelledby","Header","Title","Body","InputGroup","Prepend","Text","aria-label","aria-describedby","toLocaleUpperCase","defaultValue","Footer","splitStringOnLastWord","str","i","trim","lastIndexOf","minusLastWord","lastWord","slice","length","compareHouseNumbers","a","b","aSplit","toString","bSplit","aBuilding","bBuilding","aUnit","bUnit","reA","reN","astr","bstr","aA","replace","bA","aN","parseInt","bN","retval","localeCompare","getStreets","sortedmembers","sort","result","compareMembers","streets","forEach","toUpperCase","find","s","count","push","filteredmembers","clone","Object","assign","includes","filter","Members","modalShow","tempmember","Town","isAddNewMember","setModalShow","showMemberEditDialog","hideMemberEditDialog","handleMemberEditCancel","handleMemberEditSave","saveNewMember","_id","saveUpdatedMember","window","confirm","saveDelete","handleAddNewMemberButtonClick","addNewMember","post","newmembers","put","delete","index","findIndex","o","splice","Alert","show","Table","borderless","hover","contextType","PrintOut","title","date","Date","getFullYear","memberToStringArray","memberId","printTitleAndSubTitle","doc","activeFontSize","getFontSize","lineHeightFactor","getLineHeightFactor","linepos","setFontSize","text","align","footer","currentpage","pageCount","settings","margin","left","internal","pageSize","height","printStreet","startY","header","body","row","autoTable","head","content","styles","halign","fillColor","afterPageContent","theme","columnStyles","0","cellWidth","1","2","handleButtonClick","jsPDF","first_iteration","save","Group","controlId","Label","Control","lineHeight","leftMargin","pageHeight","clientId","Login","useState","loading","setLoading","user","setUser","handleLoginSuccess","response","profileObj","userData","token","tokenId","googleId","firstName","givenName","lastName","familyName","image","email","handleLogoutSuccess","removeItem","Card","onLogoutSuccess","onFailure","buttonText","onSuccess","onRequest","onAutoLoadFinished","isSignedIn","ExportCSV","memberToCSV","streetToCSV","csv","membersCSV","saveToFile","file","Blob","document","createElement","url","URL","createObjectURL","download","appendChild","click","setTimeout","removeChild","revokeObjectURL","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.30d6a838.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport const SearchTextContext = React.createContext(\"\");  //exporting context object\n\nclass SearchTextProvider extends Component {\n    state = {searchText: \"\"}\n\n    render() {\n        return (\n            <SearchTextContext.Provider value={\n                {   \n                    state: this.state,\n                    setSearchText: (value) => {\n                        console.log(\"setSearchText - \" +  value);\n                        this.setState({ searchText: value});\n                    }\n                }\n            }>\n                {this.props.children}   \n            </SearchTextContext.Provider>\n        )\n    }\n}\n\nexport default SearchTextProvider;","// Navigation.jsx\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport {LinkContainer} from 'react-router-bootstrap'\nimport FormControl from 'react-bootstrap/FormControl';\nimport {SearchTextContext} from './searchtextprovider';\n\nclass Navigation extends Component {\n    state = {\n        searchText: \"\"\n    }\n\n    render () {\n        const email = localStorage.user_email;\n        const loginStr = email ? \"logout\" : \"login\";\n\n        return (\n            <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n                <Navbar.Brand href=\"/\">Masjid Membership</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <LinkContainer to=\"/\"><Nav.Link>home</Nav.Link></LinkContainer>  \n                        <LinkContainer to=\"/members\"><Nav.Link href=\"/members\">members</Nav.Link></LinkContainer>  \n                        <LinkContainer to=\"/printout\"><Nav.Link href=\"/printout\">printout</Nav.Link></LinkContainer>  \n                        <LinkContainer to=\"/export\"><Nav.Link href=\"/export\">export</Nav.Link></LinkContainer>  \n                        <LinkContainer to=\"/login\"><Nav.Link href=\"/login\">{loginStr}</Nav.Link></LinkContainer>  \n                    </Nav>\n                    <SearchTextContext.Consumer>\n                        {(context) => (\n                        <Form inline>\n                            <FormControl type=\"text\" placeholder=\"search\" className=\"mr-sm-2\" \n                                onChange={e => this.setState({ searchText: e.target.value})}    \n                                onKeyPress={(e) => {\n                                    if (e.charCode === 13) {\n                                      e.preventDefault();\n                                      context.setSearchText(this.state.searchText);\n                                    }\n                                }}\n                            />\n                            <Button variant=\"outline-success\" onClick={()=>{context.setSearchText(this.state.searchText)}}>search</Button>\n                        </Form>\n                        )}\n                    </SearchTextContext.Consumer>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport axios from 'axios'\n\nclass Home extends Component {\n   \n    state = {\n        stats: {},\n        error: \"\"\n      };\n\n    async componentDidMount() {\n        try {\n          const res = await axios.get('/stats');\n          this.setState({members: res.data, error: \"\"});\n        } catch (e) {\n          this.setState({error: e.message});\n          console.error(e);\n        }\n      }\n\n    render()  {\n        const displayName = localStorage.user_displayName;\n\n        return (\n            <Jumbotron fluid>\n                <Container>\n                    <h1>Welcome to the Bury Park Masjid Membership App {displayName}</h1>\n                    <p>\n                    </p>\n                    <br></br>\n                    <p>\n                        For information about getting access to this application please contact <a href=\"mailto:m.hoque@gmail.com\">Mahmudul Hoque</a>\n                    </p>\n                </Container>\n            </Jumbotron>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nclass Member extends Component {\n    \n    handleEditButtonClick = (e) => {\n        this.props.handleMemberEdit(this.props.member);\n    }\n\n    handleRemoveButtonClick = (e) => {\n        this.props.handleMemberRemove(this.props.member);\n    }\n\n    render () {\n        const address = this.props.member.HouseNo + \" \" + this.props.member.Street;\n        const name = this.props.member.Firstname + \" \" + this.props.member.Lastname;\n        return (\n            <tr className=\"border-bottom\">\n                <td>{this.props.member.MemberId}</td>\n                <td>{name}</td>\n                <td>{address}</td>\n                <td><ButtonGroup size=\"sm\">\n                        <Button variant=\"outline-warning\" onClick={this.handleEditButtonClick}>e</Button>\n                        <Button variant=\"outline-danger\" onClick={this.handleRemoveButtonClick}>r</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        );\n    }\n}\n  \nexport default Member;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Member from './member';\nimport { SearchTextContext } from './searchtextprovider';\n\nclass Street extends Component {\n\n    handleAddButtonClick = (e) => {\n        this.props.addMember(this.props.street);\n    }\n\n    handleMemberEdit = (m) => {\n        this.props.updateMember(m);\n    }\n\n    handleMemberRemove = (m) => {\n        this.props.removeMember(m);\n    }\n\n    render () {\n        return (\n            <React.Fragment> \n            <tr className=\"border-bottom border-success font-weight-bold\">\n                <td colSpan=\"3\">{this.props.street.name + '  '}\n                </td>\n                <td>\n                    <Button variant=\"outline-warning\" onClick={this.handleAddButtonClick}>+</Button>\n                </td>\n            </tr>\n            {this.props.street.members.map((member) => {\n\n                let searchText = \"\";\n                <SearchTextContext.Consumer>\n                  {(context) => {\n                     searchText =  context.state.searchText;\n                     console.log(\"searchText to use - \" +  searchText);\n                   }\n                  }\n                </SearchTextContext.Consumer>\n\n                return (\n                    <Member \n                        key={member.MemberId} \n                        member={member} \n                        handleMemberEdit={this.handleMemberEdit}\n                        handleMemberRemove={this.handleMemberRemove}\n                    />\n                );\n            })}\n\n            <tr><td></td><td></td><td></td></tr>\n            <tr><td colSpan=\"3\"></td></tr>\n\n            </React.Fragment> \n        );\n    }\n}\n  \nexport default Street;","import React, {Component} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\n\nclass MemberEdit extends Component {\n\n  handleSave = (e) => {\n    this.props.onSave(this.props.member);\n  }\n  \n  handleCancel = () => {\n    this.props.onCancel(this.props.member);\n  }\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\">\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Member details\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"Firstname\">Firstname(s)</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              placeholder=\"First name\"\n              aria-label=\"Firstname\"\n              aria-describedby=\"firstname\"\n              //onChange={e => this.setState({ memberFirstname: e.target.value.toLocaleUpperCase() })}\n              onChange={e => this.props.member.Firstname = e.target.value.toLocaleUpperCase() }\n              defaultValue={this.props.member.Firstname}\n            />\n          </InputGroup>\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"Lastname\">Lastname</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              placeholder=\"Last name\"\n              aria-label=\"Lastname\"\n              aria-describedby=\"lastname\"\n              //onChange={e => this.setState({ memberLastname: e.target.value.toLocaleUpperCase() })}\n              onChange={e => this.props.member.Lastname = e.target.value.toLocaleUpperCase() }\n              defaultValue={this.props.member.Lastname}\n            />\n          </InputGroup>\n        <br/>\n        <br/>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"HouseNo\">House</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            placeholder=\"House number or name\"\n            aria-label=\"House #\"\n            aria-describedby=\"house\"\n            //onChange={e => this.setState({ memberHouseNo: e.target.value.toLocaleUpperCase() })}\n            onChange={e => this.props.member.HouseNo = e.target.value.toLocaleUpperCase() }\n            defaultValue={this.props.member.HouseNo}\n          />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"Street\">Street</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            placeholder=\"Street name\"\n            aria-label=\"Street\"\n            aria-describedby=\"street\"\n            //onChange={e => this.setState({ memberStreet: e.target.value.toLocaleUpperCase() })}\n            onChange={e => this.props.member.Street = e.target.value.toLocaleUpperCase() }\n            defaultValue={this.props.member.Street}\n          />\n        </InputGroup>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={this.handleCancel}>Cancel</Button>\n        <Button variant=\"primary\" onClick={this.handleSave}>Save</Button>\n      </Modal.Footer>\n    </Modal>\n  );}\n}\n\nexport default MemberEdit;","\nconst splitStringOnLastWord = function (str) {\n    const i = str.trim().lastIndexOf(\" \"); \n    if(i === -1) {\n      return {\n        minusLastWord:  \"\",\n        lastWord: str.trim()\n      }\n    } else {\n      const minusLastWord = str.slice(0, i);\n      const lastWord = str.slice(i, str.length);\n\n      return {\n        minusLastWord: minusLastWord.trim(),\n        lastWord: lastWord.trim()\n      }\n    }\n}\n\n// Precendence...\n// street alphabetical\n// lower house number\n// lastname alphabetical\n// firstname alphabetical\nexport const compareMembers = function (a, b) {\n    let result = 0;\n    result = a.Street.localeCompare(b.Street);\n\n    if(result === 0) {\n      result = compareHouseNumbers(a.HouseNo, b.HouseNo);\n    }\n\n    if(result === 0) {\n      result = a.Lastname.localeCompare(b.Lastname);\n    }\n\n    if(result === 0) {\n      result = a.Firstname.localeCompare(b.Firstname);\n    }\n\n    return result;\n}\n\nexport const compareHouseNumbers = function (a, b) {\n    // 1. 1 STREET\n    // 2. 1A STREET \n    // 3. FLAT A 7 STREET\n    //\n    const aSplit = splitStringOnLastWord(a.toString()); \n    const bSplit = splitStringOnLastWord(b.toString()); \n\n    const aBuilding = aSplit.lastWord;\n    const bBuilding = bSplit.lastWord;\n    const aUnit = aSplit.minusLastWord;\n    const bUnit = bSplit.minusLastWord;\n\n    const reA = /[^a-zA-Z]/g;\n    const reN = /[^0-9]/g;\n\n    const astr = aBuilding.toString();\n    const bstr = bBuilding.toString();\n\n    const aA = astr.replace(reA, \"\");\n    const bA = bstr.replace(reA, \"\");\n    const aN = parseInt(astr.replace(reN, \"\"), 10);\n    const bN = parseInt(bstr.replace(reN, \"\"), 10);\n\n    let retval = 0\n    if (aN === bN) {\n      if (aA.length === 0) {\n        if (bA.length === 0) { \n          retval = 0;\n        } else {\n          retval = -1;\n        }\n      } else {\n        retval = aA.localeCompare(bA);\n      }\n    } else {\n      retval = aN === bN ? 0 : aN > bN ? 1 : -1;\n    }\n\n    // compare the unit address of building is the same\n    if(retval === 0 ) {\n      if(aUnit.length === 0) {\n        if (bUnit.length === 0) {\n          retval = 0;\n        } else {\n          retval = -1;\n        }\n      } else {\n        retval = aUnit.localeCompare(bUnit);\n      }\n    }\n\n    return retval;\n}  \n\n//////////////////////\n  // Get an array of all the streets with the members in the street contained in the object\n  // Order the streets alphabetically\n  // Order the members in the street with increamenting address\n  // Order the members of a same houehold alphatically\n  // Remove any streets which wont be displayed becaue of filter\n  export const getStreets = function (members, searchText) {\n    // sort all the members (can be done once after load if order is maintained when new member is added)\n    const sortedmembers = members.sort((a,b) => {\n      //return a.Street.localeCompare(b.Street);\n      return compareMembers(a, b);\n    });\n\n    // group members into the streets\n    const streets = [];\n    sortedmembers.forEach((m) => {\n      m.Street = m.Street.toUpperCase();\n      // find the street object with the same name as the member street name\n      let street = streets.find((s) => { \n        if (s.name === m.Street) {\n          return true;  \n        } else {\n          return false;\n        }\n      });\n\n      // create the street entry if required\n \t    if(!street) {\n        street = {\n          name: m.Street, members: [], count: 0\n        };\n        streets.push(street);\n      }\n\n      street.members.push(m); \n      street.count = street.count + 1; // increament the count\n    });\n\n    // apply member ID and any filter\n    let id = 1;\n    streets.forEach((street) => {\n      let filteredmembers = [];\n      street.members.forEach((m) => {\n        \n        let clone = Object.assign({},m);\n        clone.MemberId = id++; // each member has an number ID in sequence (this is what the masjid need)\n\n        // apply the filter\n        if (searchText && searchText.length > 0) {\n          if(m.Firstname.includes(searchText) || m.Lastname.includes(searchText) || m.Street.includes(searchText)) {\n            filteredmembers.push(clone);\n          }\n        } else { // no filter\n           filteredmembers.push(clone);\n        }\n      });\n      street.members = filteredmembers;\n    });\n\n    // remove any empty streets\n    return streets.filter((s) => {\n      return s.members.length > 0;\n    })\n}\n","import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport axios from 'axios';\n\nimport Street from './street';\nimport MemberEdit from './memberedit';\nimport { SearchTextContext } from './searchtextprovider';\nimport { getStreets } from '../utils/memberutils';\n\nclass Members extends Component {\n\n  state = {\n    modalShow: false,\n    tempmember:  {Firstname: \"FIRSTNAME\", Lastname: \"LASTNAME\", HouseNo: \"1\", Street: \"STREET 1\", Town: \"LUTON\"},\n    isAddNewMember: false,\n    members: [],\n    error: \"\"\n  };\n\n  async componentDidMount() {\n    try {\n      const res = await axios.get('/members');\n      this.setState({members: res.data, error: \"\"});\n    } catch (e) {\n      this.setState({error: e.message});\n      console.error(e);\n    }\n  }\n\n  setModalShow = (e) => {\n    this.setState({modalShow: e});\n  }\n\n  showMemberEditDialog = () => {\n    this.setModalShow(true);\n  }\n\n  hideMemberEditDialog = () => {\n    this.setModalShow(false);\n  }\n\n  handleMemberEditCancel = (m) => {\n    this.hideMemberEditDialog();\n  }\n\n  async saveNewMember(m) {\n    if (m.Firstname && m.Firstname.length > 0 &&\n        m.Lastname && m.Lastname.length > 0 &&\n        m.HouseNo && m.HouseNo.length > 0 &&\n        m.Street && m.Street.length > 0) {\n\n        const res = await axios.post('/members', m);  \n\n        const newmembers = [...this.state.members, res.data];\n        this.setState({members: newmembers});\n    }\n  }\n\n  async saveUpdatedMember(m) {\n    try {\n      await axios.put('members/' + m._id, m);\n      // TODO: update with the member details returned from server? \n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async saveDelete(m) {\n    try {\n      const res = await axios.delete('members/' + m._id, m);\n\n      const index = this.state.members.findIndex(function(o) {\n        return o._id === res.data._id;\n      });\n\n      if (index !== -1) {\n        this.state.members.splice(index, 1);\n        this.setState({members: this.state.members});\n      } \n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  handleMemberEditSave = (m) => {\n    try {\n      if (this.state.isAddNewMember) {\n        console.log(\"Save new member - \", m);\n        this.saveNewMember(m);\n      } else {\n        // find the member to update\n        const member = this.state.members.find(m => m._id === this.state.tempmember._id);\n        if(member) {\n          member.Firstname = m.Firstname;\n          member.Lastname = m.Lastname;\n          member.HouseNo = m.HouseNo;\n          member.Street = m.Street;\n          member.Town = m.Town;\n          console.log(\"Save update member - \", member);\n          this.saveUpdatedMember(member);\n          this.setState({members: this.state.members}); // fetch from server instead\n        }\n      }\n\n      this.hideMemberEditDialog();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  removeMember = (m) => {\n    const response = window.confirm(`Are you sure you want to delete ${m.Firstname} ${m.Lastname}`);\n    if(response) {\n      this.saveDelete(m);\n    }\n  }\n  \n  handleAddNewMemberButtonClick = (e) => {\n    const street = {name: \"\"};\n    this.addNewMember(street);\n  }\n\n  addNewMember = (street) => {\n    this.setState({ \n        tempmember:  {Firstname: \"\", Lastname: \"\", HouseNo: \"\", Street: street.name,  Town: \"LUTON\"},\n        isAddNewMember: true\n      }, this.showMemberEditDialog);\n  }\n\n  updateMember = (m) => {\n    console.log(\"Update member - \", m);\n    this.setState({ \n        tempmember: m,\n        isAddNewMember: false\n      }, this.showMemberEditDialog);\n  }\n\n\n  render () {\n    if(this.state.error.length > 0) {\n      const variant = 'danger'\n      return (\n        <Alert variant={variant}>\n          {this.state.error}\n        </Alert>\n      );\n    }\n\n      let i = this.state.members.length + 1000;\n      const streets = getStreets(this.state.members, \n        this.context.state.searchText.toLocaleUpperCase()\n      );\n      const { tempmember } = this.state;\n\n      let component;  \n      if( this.state.members.length > 0 ) {\n        component = \n          <React.Fragment>\n          <MemberEdit\n            member={tempmember}\n            show={this.state.modalShow}\n            onCancel={this.handleMemberEditCancel}\n            onSave={this.handleMemberEditSave}\n          />\n\n          <Table borderless hover>\n          {/*\n          <SearchTextContext.Consumer>\n            {(context) => ( context.setStreets(streets))}\n          </SearchTextContext.Consumer>\n          */}\n          <tbody>\n            {streets.map((street) => {\n              return (\n                <Street \n                  key={i++} \n                  street={street} \n                  addMember={this.addNewMember} \n                  removeMember={this.removeMember} \n                  updateMember={this.updateMember} \n                />\n              );\n            })}\n          </tbody>\n        </Table>\n        </React.Fragment>;\n      } else {\n        component = \n          <React.Fragment>\n          <MemberEdit\n            member={tempmember}\n            show={this.state.modalShow}\n            onCancel={this.handleMemberEditCancel}\n            onSave={this.handleMemberEditSave}\n          />\n        <div>\n          <Button onClick={this.handleAddNewMemberButtonClick}>Add Member</Button>\n        </div>\n        </React.Fragment>\n      }\n\n      return component;\n    }\n\n    static contextType = SearchTextContext;\n}\n\n  \nexport default Members;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport axios from 'axios';\n\nimport { getStreets } from '../utils/memberutils';\n\nclass PrintOut extends Component {\n    state = {\n      title: \"Bury Park Masjid Membership Roll\",\n      date: new Date().getFullYear()\n    };\n\n    static doc;\n    static currentpage = 0;\n    static lineHeight = 8;\n    static leftMargin = 20;\n    static pageHeight = PrintOut.lineHeight * 20;\n\n    render() { \n        return ( \n          <React.Fragment>\n            <br/>\n            <Container>\n              <Form.Group controlId=\"formTitle\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control placeholder=\"Enter title of the report\" \n                  onChange={e => this.setState({ title: e.target.value })}\n                  defaultValue={this.state.title}\n                />\n              </Form.Group>\n\n            <Form.Group controlId=\"formDate\">\n              <Form.Label>Date</Form.Label>\n                <Form.Control placeholder=\"Date\" \n                  onChange={e => this.setState({ date: e.target.value })}\n                  defaultValue={this.state.date}  \n                />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" onClick={this.handleButtonClick}>\n              Print to PDF\n            </Button>\n          </Container>\n          </React.Fragment>\n        );\n    }\n\n\n    memberToStringArray = (member) => {\n        const retval = [];\n        retval.push(member.memberId);\n        retval.push(member.Firstname, + \" \" + member.Lastname);\n        retval.push(member.HouseNo + \" \" + member.Street);\n        return retval;\n    }\n\n    /**\n    * @param {jsPDF} doc \n    * @param {Object} streets \n    * @param {string} streets.name \n    */\n    printTitleAndSubTitle = (doc, streets) => {\n        const title = this.state.title.toString();\n        const date = this.state.date.toString();\n\n        let activeFontSize = doc.getFontSize();\n        let lineHeightFactor = doc.getLineHeightFactor();\n        let linepos = 20;\n\n        doc.setFontSize(30);\n        doc.text(title, 100, linepos, {align: \"center\"});\n        linepos += activeFontSize + lineHeightFactor\n        doc.setFontSize(15);\n        doc.text(date, 100, linepos, {align: \"center\"});\n\n        return doc;\n    }\n\n\n    footer = (data) => {\n      if (PrintOut.currentpage < data.pageCount) {\n\n        PrintOut.doc.setFontSize(10);\n\n        var str = \"Page \" + data.pageCount;\n        //str = str + \" of \" + totalPagesExp;\n\n\n        PrintOut.doc.text(str, data.settings.margin.left, PrintOut.doc.internal.pageSize.height - 15);\n        PrintOut.currentpage = data.pageCount;\n      }\n  }\n\n    /**\n    * @param {jsPDF} doc \n    * @param {Object} street \n    * @param {string} streets.name \n    */\n    printStreet = (doc, street, startY) => {\n        doc.setFontSize(10);\n        \n        const header = street.name; \n\n        const body = [];\n        street.members.forEach((m) => {\n          const row = [];\n          row[0] = m.MemberId;\n          row[1] = m.Firstname + \" \" + m.Lastname;\n          row[2] = m.HouseNo + \" \" + m.Street;\n\n          body.push(row);\n        });\n\n        if (startY) {\n          doc.autoTable({\n              startY: 60,\n              head: [\n                [\n                  {\n                    content: header,\n                    colSpan: 3,\n                    styles: { halign: 'center', fillColor: [22, 160, 133] },\n                  },\n                ],\n              ],\n              afterPageContent: this.footer,\n              body: body,\n              theme: 'grid',\n              columnStyles: {\n                0: {cellWidth: 15},\n                1: {cellWidth: 90},\n                2: {cellWidth: 80},\n              }\n            });\n          } else {\n            doc.autoTable({\n              head: [\n                [\n                  {\n                    content: header,\n                    colSpan: 3,\n                    styles: { halign: 'center', fillColor: [22, 160, 133] },\n                  },\n                ],\n              ],\n              afterPageContent: this.footer,\n              body: body,\n              theme: 'grid',\n              columnStyles: {\n                0: {cellWidth: 15},\n                1: {cellWidth: 90},\n                2: {cellWidth: 80},\n              }\n            });\n          }\n\n          return doc;\n    }\n\n    handleButtonClick = async (e) => {\n        e.preventDefault();\n\n        this.currentpage = 0;\n\n        const res = await axios.get('/members');\n        const members = res.data;\n        const streets = getStreets(members, \"\");\n\n        //const doc = new jsPDF();\n        PrintOut.doc = new jsPDF();\n        this.printTitleAndSubTitle(PrintOut.doc);\n\n        let first_iteration = true;\n        streets.forEach((s) => {\n          if (first_iteration) {\n            this.printStreet(PrintOut.doc, s, 30);\n            first_iteration = false;\n          } else {\n            this.printStreet(PrintOut.doc, s);\n          }\n        });\n          \n        PrintOut.doc.save('bpjm-members.pdf');\n\n    }\n}\n\nexport default PrintOut;","import React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport axios from 'axios';\n//import {useHistory} from 'react-router-dom';\n\nconst clientId = \"677448856451-tf822n4ctpqtrro55q55j400j6iv3gft.apps.googleusercontent.com\";\n\nfunction Login() {\n \n  const [loading, setLoading] = useState('Loading...');\n  const [user, setUser] = useState(null);\n\n  //const history = useHistory();\n \n  const handleLoginSuccess = async (response) => {\n    try {\n        setUser(response.profileObj);\n         \n        setLoading();\n\n        const userData = {\n            token: response.tokenId,\n            googleId: response.profileObj.googleId,\n            displayName: response.profileObj.name,\n            firstName: response.profileObj.givenName,\n            lastName: response.profileObj.familyName,\n            image: response.profileObj.image,\n            email: response.profileObj.email\n        };\n\n        const res = await axios.post('/auth/google', userData);\n\n        localStorage.user_displayName = res.data.displayName;\n        localStorage.user_email = res.email;\n\n        //history.push(\"/\");\n        // store returned user somehow\n    } catch (error) {\n        console.log(error);\n    }\n  }\n \n  const handleLoginFailure = error => {\n    console.log(\"Login Failure \", error);\n    setLoading();\n  }\n \n  const handleLogoutSuccess = async () => {\n    try {\n      setUser(null);\n      localStorage.removeItem(\"user_displayName\");\n      await axios.delete('/auth/logout');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n \n  const handleLogoutFailure = error => {\n    console.log(\"Logout Failure \", error);\n  }\n \n  const handleRequest = () => {\n    setLoading(\"Loading...\");\n  }\n \n  const handleAutoLoadFinished = () => {\n    setLoading();\n  }\n \n  return (\n    <Container className=\"col-lg-4 col-md-4 col-sm-4 justify-content-center\">\n    <br/>\n      {user ? \n        <Card>\n        <Card.Header>Welcome {user.name}!</Card.Header>\n        <Card.Body><Card.Title>\n        <GoogleLogout\n          clientId={clientId}\n          onLogoutSuccess={handleLogoutSuccess}\n          onFailure={handleLogoutFailure}\n        />\n        </Card.Title></Card.Body></Card>\n      :\n        <Card>\n        <Card.Header>Login using your Google account</Card.Header>\n        <Card.Body><Card.Title>\n        <GoogleLogin\n          clientId={clientId}\n          buttonText={loading}\n          onSuccess={handleLoginSuccess}\n          onFailure={handleLoginFailure}\n          onRequest={handleRequest}\n          onAutoLoadFinished={handleAutoLoadFinished}\n          isSignedIn={true}\n        /></Card.Title></Card.Body></Card>}\n    </Container>\n  );\n}\n\nexport default Login;","\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport axios from 'axios';\n\nimport { getStreets } from '../utils/memberutils'\n\nclass ExportCSV extends Component {\n\n    render() { \n        return ( \n        <React.Fragment>\n            \t<br/>\n            \t<Container>\n            \t\t<Button variant=\"primary\" type=\"submit\" onClick={this.handleButtonClick}>\n            \t\t \tExport to CSV \n            \t\t</Button>\n            \t<br/>\n\t    \t<pre id=\"csv\"></pre>\n          \t</Container>\n        </React.Fragment>\n        );\n    }\n\n    memberToCSV = (member) => {\n        return member.MemberId + \",\" + member.Firstname + \",\" + member.Lastname + \",\" + member.HouseNo + \",\" + member.Street;\n    }\n\n    streetToCSV = (csv, street) => {\n        \n        street.members.forEach((m) => {\n\t\tcsv += this.memberToCSV(m) + '\\r\\n';\n        });\n\n        return csv; \n    }\n\n    saveToFile(membersCSV) {\n        const file = new Blob([membersCSV], {type: 'application/octet-stream'});\n        const a = document.createElement(\"a\");\n        const url = URL.createObjectURL(file); \n        a.href = url;\n        a.download = \"bpjm-members.csv\";\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(() => {\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(url);\n        }, 0);\n    }\n\n\n    handleButtonClick = async (e) => {\n\t    e.preventDefault();\n\n    \tconst res = await axios.get('/members');\n        const members = res.data;\n        const streets = getStreets(members, \"\");\n\n    \tvar membersCSV = \"ID,Firstname,Lastname,House,Street\\r\\n\";\n\n        streets.forEach((s) => {\n            membersCSV = this.streetToCSV(membersCSV, s);\n        });\n\n        console.log(membersCSV);\n        this.saveToFile(membersCSV);\n    }\n}\n\nexport default ExportCSV;","\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Navigation from './components/navigation';\nimport Home from './components/home';\nimport Members from './components/members';\nimport PrintOut from './components/printout';\nimport Login from './components/login';\nimport ExportCSV from './components/exportcsv';\nimport SearchTextProvider from './components/searchtextprovider';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Router>\n        <SearchTextProvider>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/members\" component={Members} />\n          <Route exact path=\"/PrintOut\" component={PrintOut} />\n          <Route exact path=\"/export\" component={ExportCSV} />\n          <Route exact path=\"/login\" component={Login} />\n        </Switch>\n        </SearchTextProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}