{"version":3,"sources":["components/searchtextprovider.js","components/navigation.jsx","components/member.jsx","components/street.jsx","components/memberedit.jsx","components/members.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchTextContext","React","createContext","SearchTextProvider","state","searchText","Provider","value","this","setSearchText","console","log","setState","props","children","Component","Navigation","toggle","Toggle","onKeyUp","e","charCode","target","Navbar","bg","expand","Brand","href","aria-controls","Collapse","id","Nav","className","to","Link","Form","inline","FormControl","type","placeholder","onChange","onKeyPress","Consumer","context","Button","variant","onClick","Member","handleEditButtonClick","handleMemberEdit","member","handleRemoveButtonClick","handleMemberRemove","address","HouseNo","Street","name","Firstname","Lastname","MemberId","ButtonGroup","size","handleAddButtonClick","addMember","street","m","updateMember","removeMember","Fragment","colSpan","members","map","MemberEdit","handleSave","memberFirstname","memberLastname","memberHouseNo","memberStreet","Town","memberTown","onSave","handleCancel","onCancel","Modal","aria-labelledby","Header","Title","Body","InputGroup","Prepend","Text","aria-label","aria-describedby","toLocaleUpperCase","defaultValue","Footer","Members","modalShow","tempmember","isAddNewMember","setModalShow","showMemberEditDialog","hideMemberEditDialog","handleMemberEditCancel","handleMemberEditSave","saveNewMember","find","_id","saveUpdatedMember","error","saveDelete","handleAddNewMemberButtonClick","addNewMember","splitStringOnLastWord","str","i","trim","lastIndexOf","minusLastWord","lastWord","slice","length","compareHouseNumbers","a","b","aSplit","toString","bSplit","aBuilding","bBuilding","aUnit","bUnit","reA","reN","astr","bstr","aA","replace","bA","aN","parseInt","bN","retval","localeCompare","compareMembers","result","getStreets","sort","streets","forEach","toUpperCase","s","push","filteredmembers","clone","Object","assign","includes","filter","axios","get","res","data","post","newmembers","put","delete","index","findIndex","o","splice","show","Table","borderless","hover","contextType","Home","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b17fc799.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport const SearchTextContext = React.createContext(\"\");  //exporting context object\nclass SearchTextProvider extends Component {\n    state = {searchText: \"\"}\n\n    render() {\n        return (\n            <SearchTextContext.Provider value={\n                {   \n                    state: this.state,\n                    setSearchText: (value) => {\n                        console.log(\"setSearchText - \" +  value);\n                        this.setState({ searchText: value});\n                    }\n                }\n            }>\n                {this.props.children}   \n            </SearchTextContext.Provider>\n        )\n    }\n}\n\nexport default SearchTextProvider;","// Navigation.jsx\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport FormControl from 'react-bootstrap/FormControl';\nimport {SearchTextContext} from './searchtextprovider';\n\nclass Navigation extends Component {\n    state = {\n        toggle:false,\n        searchText: \"\"\n    }\n\n    Toggle = () => {\n        this.setState({toggle:!this.state.toggle})\n    }\n\n    onKeyUp = (e) => {\n        if (e.charCode === 13) {\n          this.setState({ searchText: e.target.value });\n        }\n    }\n\n    render () {\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"/\">Masjid Membership</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <LinkContainer to=\"/\">\n                            <Nav.Link href=\"/\">home</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to=\"/members\">\n                            <Nav.Link>members</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to=\"/printout\">\n                            <Nav.Link>printout</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to=\"/logout\">\n                            <Nav.Link href=\"/logout\">logout</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"search\" className=\"mr-sm-2\" \n                            onChange={e => this.setState({ searchText: e.target.value})}    \n                            onKeyPress={this.onKeyUp}\n                        />\n                        <SearchTextContext.Consumer>\n                            {(context) => (\n                                <Button variant=\"outline-success\" onClick={()=>{context.setSearchText(this.state.searchText)}}>search</Button>\n                            )}\n                        </SearchTextContext.Consumer>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nclass Member extends Component {\n    \n    handleEditButtonClick = (e) => {\n        this.props.handleMemberEdit(this.props.member);\n    }\n\n    handleRemoveButtonClick = (e) => {\n        this.props.handleMemberRemove(this.props.member);\n    }\n\n    render () {\n        const address = this.props.member.HouseNo + \" \" + this.props.member.Street;\n        const name = this.props.member.Firstname + \" \" + this.props.member.Lastname;\n        return (\n            <tr className=\"border-bottom\">\n                <td>{this.props.member.MemberId}</td>\n                <td>{name}</td>\n                <td>{address}</td>\n                <td><ButtonGroup size=\"sm\">\n                        <Button variant=\"outline-warning\" onClick={this.handleEditButtonClick}>e</Button>\n                        <Button variant=\"outline-danger\" onClick={this.handleRemoveButtonClick}>r</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        );\n    }\n}\n  \nexport default Member;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Member from './member';\nimport { SearchTextContext } from './searchtextprovider';\n\nclass Street extends Component {\n\n    handleAddButtonClick = (e) => {\n        this.props.addMember(this.props.street);\n    }\n\n    handleMemberEdit = (m) => {\n        this.props.updateMember(m);\n    }\n\n    handleMemberRemove = (m) => {\n        this.props.removeMember(m);\n    }\n\n    render () {\n        return (\n            <React.Fragment> \n            <tr className=\"border-bottom border-success font-weight-bold\">\n                <td colSpan=\"3\">{this.props.street.name + '  '}\n                </td>\n                <td>\n                    <Button variant=\"outline-warning\" onClick={this.handleAddButtonClick}>+</Button>\n                </td>\n            </tr>\n            {this.props.street.members.map((member) => {\n\n                let searchText = \"\";\n                <SearchTextContext.Consumer>\n                  {(context) => {\n                     searchText =  context.state.searchText;\n                     console.log(\"searchText to use - \" +  searchText);\n                   }\n                  }\n                </SearchTextContext.Consumer>\n\n                return (\n                    <Member \n                        key={member.MemberId} \n                        member={member} \n                        handleMemberEdit={this.handleMemberEdit}\n                        handleMemberRemove={this.handleMemberRemove}\n                    />\n                );\n            })}\n\n            <tr><td></td><td></td><td></td></tr>\n            <tr><td colSpan=\"3\"></td></tr>\n\n            </React.Fragment> \n        );\n    }\n}\n  \nexport default Street;","import React, {Component} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\n\nclass MemberEdit extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        memberFirstname:  \"\",\n        memberLastname:  \"\",\n        memberHouseNo:  \"\",\n        memberStreet:  \"\",\n        memberTown: \"Luton\"\n    }\n  }\n\n  handleSave = (e) => {\n    const firstname = this.state.memberFirstname ? this.state.memberFirstname : this.props.member.Firstname;\n    const lastname = this.state.memberLastname ? this.state.memberLastname : this.props.member.Lastname;\n    const houseNo = this.state.memberHouseNo ? this.state.memberHouseNo : this.props.member.HouseNo;\n    const street = this.state.memberStreet ? this.state.memberStreet : this.props.member.Street;\n    const town = this.state.memberTown ? this.state.memberTown : this.props.member.Town;\n    const member = {\n      Firstname: firstname,\n      Lastname: lastname,\n      HouseNo: houseNo,\n      Street: street,\n      Town: town  \n    }\n    this.props.onSave(member);\n  }\n  \n  handleCancel = () => {\n    const member = {\n      Firstname: this.state.memberFirstname,\n      Lastname: this.state.memberLastname,\n      HouseNo: this.state.memberHouseNo,\n      Street: this.state.memberStreet,\n      Town: this.state.memberTown,\n    }\n    this.props.onCancel(member);\n  }\n\n  render() {\n  return (\n    <Modal\n      {...this.props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n    >\n      <Modal.Header>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Member details\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n        <InputGroup.Text id=\"Firstname\">Firstname(s)</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder=\"First name\"\n          aria-label=\"Firstname\"\n          aria-describedby=\"firstname\"\n          onChange={e => this.setState({ memberFirstname: e.target.value.toLocaleUpperCase() })}\n          defaultValue={this.props.member.Firstname}\n        />\n      </InputGroup>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n        <InputGroup.Text id=\"Lastname\">Lastname</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder=\"Last name\"\n          aria-label=\"Lastname\"\n          aria-describedby=\"lastname\"\n          onChange={e => this.setState({ memberLastname: e.target.value.toLocaleUpperCase() })}\n          defaultValue={this.props.member.Lastname}\n        />\n      </InputGroup>\n      <br/>\n      <br/>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n        <InputGroup.Text id=\"HouseNo\">House</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder=\"House number or name\"\n          aria-label=\"House #\"\n          aria-describedby=\"house\"\n          onChange={e => this.setState({ memberHouseNo: e.target.value.toLocaleUpperCase() })}\n          defaultValue={this.props.member.HouseNo}\n        />\n      </InputGroup>\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n        <InputGroup.Text id=\"Street\">Street</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          placeholder=\"Street name\"\n          aria-label=\"Street\"\n          aria-describedby=\"street\"\n          onChange={e => this.setState({ memberStreet: e.target.value.toLocaleUpperCase() })}\n          defaultValue={this.props.member.Street}\n        />\n      </InputGroup>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={this.handleCancel}>Cancel</Button>\n        <Button variant=\"primary\" onClick={this.handleSave}>Save</Button>\n      </Modal.Footer>\n    </Modal>\n  );}\n}\n\nexport default MemberEdit;","// Navigation.jsx\n//import { Link } from \"react-router-dom\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\n//import _ from 'lodash';\n\nimport Street from './street';\nimport MemberEdit from './memberedit';\nimport { SearchTextContext } from './searchtextprovider';\n\nclass Members extends Component {\n\n    state = {\n      modalShow: false,\n      tempmember:  {Firstname: \"FIRSTNAME\", Lastname: \"LASTNAME\", HouseNo: \"1\", Street: \"STREET 1\", Town: \"LUTON\"},\n      isAddNewMember: false,\n      members: []\n    };\n\n  async componentDidMount() {\n    try {\n      const res = await axios.get('/members');\n      this.setState({members: res.data});\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  setModalShow = (e) => {\n    this.setState({modalShow: e});\n  }\n\n  showMemberEditDialog = () => {\n    this.setModalShow(true);\n  }\n\n  hideMemberEditDialog = () => {\n    this.setModalShow(false);\n  }\n\n  handleMemberEditCancel = (m) => {\n    this.hideMemberEditDialog();\n  }\n\n  async saveNewMember(m) {\n    if (m.Firstname && m.Firstname.length > 0 &&\n        m.Lastname && m.Lastname.length > 0 &&\n        m.HouseNo && m.HouseNo.length > 0 &&\n        m.Street && m.Street.length > 0) {\n\n        const res = await axios.post('/members', m);  \n\n        const newmembers = [...this.state.members, res.data];\n        this.setState({members: newmembers});\n    }\n  }\n\n  async saveUpdatedMember(m) {\n    try {\n      //const res = await axios.put('members/' + m._id, m);\n      await axios.put('members/' + m._id, m);\n      // TODO: update with the member details returned from server? \n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async saveDelete(m) {\n    try {\n      const res = await axios.delete('members/' + m._id, m);\n\n      const index = this.state.members.findIndex(function(o){\n        return o._id === res.data._id;\n      });\n\n      if (index !== -1) {\n        this.state.members.splice(index, 1);\n        this.setState({members: this.state.members});\n      } \n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  handleMemberEditSave = (m) => {\n    try {\n      if (this.state.isAddNewMember) {\n        this.saveNewMember(m);\n      } else {\n        // find the member to update\n        const member = this.state.members.find(m => m._id === this.state.tempmember._id);\n        if( member ) {\n          member.Firstname = m.Firstname;\n          member.Lastname = m.Lastname;\n          member.HouseNo = m.HouseNo;\n          member.Street = m.Street;\n          member.Town = m.Town;\n          this.saveUpdatedMember(member);\n          this.setState({members: this.state.members});\n        }\n      }\n\n      this.hideMemberEditDialog();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  removeMember = (m) => {\n    this.saveDelete(m);\n  }\n  \n  handleAddNewMemberButtonClick = (e) => {\n    const street = {name: \"\"};\n    this.addNewMember(street);\n  }\n\n  addNewMember = (street) => {\n    this.setState({ \n        tempmember:  {Firstname: \"\", Lastname: \"\", HouseNo: \"\", Street: street.name,  Town: \"LUTON\"},\n        isAddNewMember: true\n      }, this.showMemberEditDialog);\n  }\n\n  updateMember = (m) => {\n    this.setState({ \n        tempmember: m,\n        isAddNewMember: false\n      }, this.showMemberEditDialog);\n  }\n\n\n  splitStringOnLastWord = (str) => {\n    const i = str.trim().lastIndexOf(\" \"); \n    if(i === -1) {\n      return {\n        minusLastWord:  \"\",\n        lastWord: str.trim()\n      }\n    } else {\n      const minusLastWord = str.slice(0, i);\n      const lastWord = str.slice(i, str.length);\n\n      return {\n        minusLastWord: minusLastWord.trim(),\n        lastWord: lastWord.trim()\n      }\n\n    }\n  }\n  \n  compareHouseNumbers = (a, b) => {\n    // 1. 1 STREET\n    // 2. 1A STREET \n    // 3. FLAT A 7 STREET\n    //\n\n    const aSplit = this.splitStringOnLastWord(a.toString()); \n    const bSplit = this.splitStringOnLastWord(b.toString()); \n\n    const aBuilding = aSplit.lastWord;\n    const bBuilding = bSplit.lastWord;\n    const aUnit = aSplit.minusLastWord;\n    const bUnit = bSplit.minusLastWord;\n\n\n    const reA = /[^a-zA-Z]/g;\n    const reN = /[^0-9]/g;\n\n    const astr = aBuilding.toString();\n    const bstr = bBuilding.toString();\n\n    const aA = astr.replace(reA, \"\");\n    const bA = bstr.replace(reA, \"\");\n    const aN = parseInt(astr.replace(reN, \"\"), 10);\n    const bN = parseInt(bstr.replace(reN, \"\"), 10);\n\n    let retval = 0\n    if (aN === bN) {\n      if (aA.length === 0) {\n        if (bA.length === 0) { \n          retval = 0;\n        } else {\n          retval = -1;\n        }\n      } else {\n        retval = aA.localeCompare(bA);\n      }\n    } else {\n      retval = aN === bN ? 0 : aN > bN ? 1 : -1;\n    }\n\n    // compare the unit address of building is the same\n    if(retval === 0 ) {\n      if(aUnit.length === 0) {\n        if (bUnit.length === 0) {\n          retval = 0;\n        } else {\n          retval = -1;\n        }\n      } else {\n        retval = aUnit.localeCompare(bUnit);\n      }\n    }\n\n    return retval;\n  }  \n\n  // Precendence...\n  // street alphabetical\n  // lower house number\n  // lastname alphabetical\n  // firstname alphabetical\n  compareMembers = (a, b) => {\n    let result = 0;\n    result = a.Street.localeCompare(b.Street);\n\n    if(result === 0) {\n      result = this.compareHouseNumbers(a.HouseNo, b.HouseNo);\n    }\n\n    if(result === 0) {\n      result = a.Lastname.localeCompare(b.Lastname);\n    }\n\n    if(result === 0) {\n      result = a.Firstname.localeCompare(b.Firstname);\n    }\n\n    return result;\n  }\n\n  //////////////////////\n  // Get an array of all the streets with the members in the street contained in the object\n  // Order the streets alphabetically\n  // Order the members in the street with increamenting address\n  // Order the members of a same houehold alphatically\n  // Remove any streets which wont be displayed becaue of filter\n  getStreets = (searchText) => {\n    // sort all the members (can be done once after load if order is maintained when new member is added)\n    this.state.members.sort((a,b) => {\n      //return a.Street.localeCompare(b.Street);\n      return this.compareMembers(a, b);\n    });\n\n    // group members into the streets\n    const streets = [];\n    this.state.members.forEach((m) => {\n      m.Street = m.Street.toUpperCase();\n      // find the street object with the same name as the member street name\n      let street = streets.find((s) => { \n        if (s.name === m.Street) {\n          return true;  \n        } else {\n          return false;\n        }\n      });\n\n      // create the street entry if required\n \t    if(!street) {\n        street = {\n          name: m.Street, members: []\n        };\n        streets.push(street);\n      }\n\n      street.members.push(m); \n    });\n\n    // apply member ID and any filter\n    let id = 1;\n    streets.forEach((street) => {\n      let filteredmembers = [];\n      street.members.forEach((m) => {\n        \n        let clone = Object.assign({},m);\n        clone.MemberId = id++; // each member has an number ID in sequence (this is what the masjid need)\n\n        // apply the filter\n        if (searchText && searchText.length > 0) {\n          if(m.Firstname.includes(searchText) || m.Lastname.includes(searchText) || m.Street.includes(searchText)) {\n            filteredmembers.push(clone);\n          }\n        } else { // no filter\n           filteredmembers.push(clone);\n        }\n      });\n      street.members = filteredmembers;\n    });\n\n    // remove any empty streets\n    return streets.filter((s) => {\n      return s.members.length > 0;\n    })\n  }\n\n    render () {\n      let i = this.state.members.length + 1000;\n      const streets = this.getStreets(this.context.state.searchText.toLocaleUpperCase());\n      const { tempmember } = this.state;\n\n      let component;  \n      if( this.state.members.length > 0 ) {\n        component = \n          <React.Fragment>\n          <MemberEdit\n            member={tempmember}\n            show={this.state.modalShow}\n            onCancel={this.handleMemberEditCancel}\n            onSave={this.handleMemberEditSave}\n          />\n\n          <Table borderless hover>\n          <tbody>\n            {streets.map((street) => {\n              return (\n                <Street \n                  key={i++} \n                  street={street} \n                  addMember={this.addNewMember} \n                  removeMember={this.removeMember} \n                  updateMember={this.updateMember} \n                />\n              );\n            })}\n          </tbody>\n        </Table>\n        </React.Fragment>;\n      } else {\n        component = \n          <React.Fragment>\n          <MemberEdit\n            member={tempmember}\n            show={this.state.modalShow}\n            onCancel={this.handleMemberEditCancel}\n            onSave={this.handleMemberEditSave}\n          />\n        <div>\n          <Button onClick={this.handleAddNewMemberButtonClick}>Add Member</Button>\n        </div>\n        </React.Fragment>\n      }\n\n      return component;\n    }\n}\n\nMembers.contextType = SearchTextContext;\n  \nexport default Members;","\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Navigation from './components/navigation';\nimport Members from './components/members';\nimport SearchTextProvider from './components/searchtextprovider';\n//import Dashboard from './components/dashboard';\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to the Bury Park Masjid Membership App</h1>\n    </div>\n  );\n};\n\n\nclass App extends Component {\n  render() {\n    return (\n      //<Dashboard/>\n      <Router>\n        <SearchTextProvider>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/members\" component={Members} />\n        </Switch>\n        </SearchTextProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}